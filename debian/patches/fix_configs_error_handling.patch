Index: alsa-lib-1.0.15/src/conf.c
===================================================================
--- alsa-lib-1.0.15.orig/src/conf.c	2008-03-11 23:07:10.000000000 -0400
+++ alsa-lib-1.0.15/src/conf.c	2008-03-11 23:08:54.000000000 -0400
@@ -591,6 +591,7 @@
 			}
 			err = snd_input_stdio_open(&in, str, "r");
 			if (err < 0) {
+				SNDERR("Cannot access file %s", str);
 				free(str);
 				return err;
 			}
@@ -2897,7 +2898,7 @@
 				return err;
 			if (snd_config_search(root, fdriver, &n) >= 0) {
 				if (snd_config_get_string(n, &driver) < 0)
-					continue;
+					goto __err;
 				while (1) {
 					char *s = strchr(driver, '.');
 					if (s == NULL)
@@ -2905,7 +2906,7 @@
 					driver = s + 1;
 				}
 				if (snd_config_search(root, driver, &n) >= 0)
-					continue;
+					goto __err;
 			} else {
 				driver = fdriver;
 			}
@@ -3005,6 +3006,8 @@
 			lf->ino = st.st_ino;
 			lf->mtime = st.st_mtime;
 		} else {
+			SNDERR("Cannot access file %s", lf->name);
+			free(lf->name);
 			memmove(&local->finfo[k], &local->finfo[k+1], sizeof(struct finfo) * (local->count - k - 1));
 			k--;
 			local->count--;
Index: alsa-lib-1.0.15/src/control/cards.c
===================================================================
--- alsa-lib-1.0.15.orig/src/control/cards.c	2008-03-11 23:07:10.000000000 -0400
+++ alsa-lib-1.0.15/src/control/cards.c	2008-03-11 23:08:30.000000000 -0400
@@ -39,12 +39,7 @@
 #define SND_FILE_LOAD		ALOAD_DEVICE_DIRECTORY "aloadC%i"
 #endif
 
-/**
- * \brief Try to load the driver for a card.
- * \param card Card number.
- * \return 1 if driver is present, zero if driver is not present
- */
-int snd_card_load(int card)
+static int snd_card_load1(int card)
 {
 	int open_dev;
 	char control[sizeof(SND_FILE_CONTROL) + 10];
@@ -61,9 +56,20 @@
 #endif
 	if (open_dev >= 0) {
 		close (open_dev);
-		return 1;
+		return 0;
+	} else {
+		return -errno;
 	}
-	return 0;
+}
+
+/**
+ * \brief Try to load the driver for a card.
+ * \param card Card number.
+ * \return 1 if driver is present, zero if driver is not present
+ */
+int snd_card_load(int card)
+{
+	return !!(snd_card_load1(card) == 0);
 }
 
 /**
@@ -104,7 +110,7 @@
  */
 int snd_card_get_index(const char *string)
 {
-	int card;
+	int card, err;
 	snd_ctl_t *handle;
 	snd_ctl_card_info_t info;
 
@@ -116,13 +122,16 @@
 			return -EINVAL;
 		if (card < 0 || card > 31)
 			return -EINVAL;
-		if (snd_card_load(card))
+		err = snd_card_load1(card);
+		if (err >= 0)
 			return card;
-		return -ENODEV;
+		return err;
 	}
 	for (card = 0; card < 32; card++) {
+#ifdef SUPPORT_ALOAD
 		if (! snd_card_load(card))
 			continue;
+#endif
 		if (snd_ctl_hw_open(&handle, NULL, card, 0) < 0)
 			continue;
 		if (snd_ctl_card_info(handle, &info) < 0) {
Index: alsa-lib-1.0.15/src/pcm/pcm.c
===================================================================
--- alsa-lib-1.0.15.orig/src/pcm/pcm.c	2008-03-11 23:08:30.000000000 -0400
+++ alsa-lib-1.0.15/src/pcm/pcm.c	2008-03-11 23:08:30.000000000 -0400
@@ -2226,9 +2226,10 @@
 	return 0;
 }
 
-int snd_pcm_open_slave(snd_pcm_t **pcmp, snd_config_t *root,
-		       snd_config_t *conf, snd_pcm_stream_t stream,
-		       int mode, snd_config_t *parent_conf)
+int snd_pcm_open_named_slave(snd_pcm_t **pcmp, const char *name,
+			     snd_config_t *root,
+			     snd_config_t *conf, snd_pcm_stream_t stream,
+			     int mode, snd_config_t *parent_conf)
 {
 	const char *str;
 	int hop;
@@ -2238,7 +2239,7 @@
 	if (snd_config_get_string(conf, &str) >= 0)
 		return snd_pcm_open_noupdate(pcmp, root, str, stream, mode,
 					     hop + 1);
-	return snd_pcm_open_conf(pcmp, NULL, root, conf, stream, mode);
+	return snd_pcm_open_conf(pcmp, name, root, conf, stream, mode);
 }
 #endif
 
Index: alsa-lib-1.0.15/src/pcm/pcm_asym.c
===================================================================
--- alsa-lib-1.0.15.orig/src/pcm/pcm_asym.c	2008-03-11 23:07:10.000000000 -0400
+++ alsa-lib-1.0.15/src/pcm/pcm_asym.c	2008-03-11 23:08:30.000000000 -0400
@@ -109,7 +109,8 @@
 	err = snd_pcm_slave_conf(root, slave, &sconf, 0);
 	if (err < 0)
 		return err;
-	err = snd_pcm_open_slave(pcmp, root, sconf, stream, mode, conf);
+	err = snd_pcm_open_named_slave(pcmp, name, root, sconf, stream,
+				       mode, conf);
 	snd_config_delete(sconf);
 	return err;
 }
Index: alsa-lib-1.0.15/src/pcm/pcm_empty.c
===================================================================
--- alsa-lib-1.0.15.orig/src/pcm/pcm_empty.c	2008-03-11 23:07:10.000000000 -0400
+++ alsa-lib-1.0.15/src/pcm/pcm_empty.c	2008-03-11 23:08:30.000000000 -0400
@@ -100,7 +100,8 @@
 	err = snd_pcm_slave_conf(root, slave, &sconf, 0);
 	if (err < 0)
 		return err;
-	err = snd_pcm_open_slave(pcmp, root, sconf, stream, mode, conf);
+	err = snd_pcm_open_named_slave(pcmp, name, root, sconf, stream,
+				       mode, conf);
 	snd_config_delete(sconf);
 	return err;
 }
Index: alsa-lib-1.0.15/src/pcm/pcm_local.h
===================================================================
--- alsa-lib-1.0.15.orig/src/pcm/pcm_local.h	2008-03-11 23:07:10.000000000 -0400
+++ alsa-lib-1.0.15/src/pcm/pcm_local.h	2008-03-11 23:08:30.000000000 -0400
@@ -749,9 +749,18 @@
 
 #define SND_PCM_APPEND	(1<<8)
 
-int snd_pcm_open_slave(snd_pcm_t **pcmp, snd_config_t *root,
-		       snd_config_t *conf, snd_pcm_stream_t stream,
-		       int mode, snd_config_t *parent_conf);
+int snd_pcm_open_named_slave(snd_pcm_t **pcmp, const char *name,
+			     snd_config_t *root,
+			     snd_config_t *conf, snd_pcm_stream_t stream,
+			     int mode, snd_config_t *parent_conf);
+static inline int
+snd_pcm_open_slave(snd_pcm_t **pcmp, snd_config_t *root,
+		   snd_config_t *conf, snd_pcm_stream_t stream,
+		   int mode, snd_config_t *parent_conf)
+{
+	return snd_pcm_open_named_slave(pcmp, NULL, root, conf, stream,
+					mode, parent_conf);
+}
 int snd_pcm_conf_generic_id(const char *id);
 
 int snd_pcm_hw_open_fd(snd_pcm_t **pcmp, const char *name, int fd, int mmap_emulation, int sync_ptr_ioctl);
Index: alsa-lib-1.0.15/src/pcm/pcm_softvol.c
===================================================================
--- alsa-lib-1.0.15.orig/src/pcm/pcm_softvol.c	2008-03-11 23:07:10.000000000 -0400
+++ alsa-lib-1.0.15/src/pcm/pcm_softvol.c	2008-03-11 23:08:30.000000000 -0400
@@ -782,6 +782,8 @@
 	if (err > 0) { /* hardware control - no need for softvol! */
 		softvol_free(svol);
 		*pcmp = slave; /* just pass the slave */
+		if (!slave->name && name)
+			slave->name = strdup(name);
 		return 0;
 	}
 
Index: alsa-lib-1.0.15/src/pcm/pcm_hooks.c
===================================================================
--- alsa-lib-1.0.15.orig/src/pcm/pcm_hooks.c	2008-03-11 23:09:41.000000000 -0400
+++ alsa-lib-1.0.15/src/pcm/pcm_hooks.c	2008-03-11 23:10:19.000000000 -0400
@@ -657,6 +657,7 @@
 			       snd_pcm_hook_ctl_elems_close, sctl);
 	if (err < 0)
 		goto _err;
+	snd_config_delete(pcm_conf);
 	return 0;
  _err:
 	if (h_hw_params)
